<?xml version="1.0" encoding="utf-8"?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /home/mspahn/catkin_albert/src/albert/albert_description/urdf/albert.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="albert_description">
  <!-- Simulation for BOXER's IMU. -->
  <gazebo>
    <plugin filename="libhector_gazebo_ros_imu.so" name="imu_controller">
      <robotNamespace>/</robotNamespace>
      <updateRate>50.0</updateRate>
      <bodyName>imu_link</bodyName>
      <topicName>imu/data</topicName>
      <accelDrift>0.005 0.005 0.005</accelDrift>
      <accelGaussianNoise>0.005 0.005 0.005</accelGaussianNoise>
      <rateDrift>0.005 0.005 0.005 </rateDrift>
      <rateGaussianNoise>0.005 0.005 0.005 </rateGaussianNoise>
      <headingDrift>0.005</headingDrift>
      <headingGaussianNoise>0.005</headingGaussianNoise>
    </plugin>
  </gazebo>
  <gazebo>
    <!-- Plugin for ros_control (actuate drive motors, lift). -->
    <!-- <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>$(arg robot_namespace)</robotNamespace>
      <robotParam>robot_description</robotParam>
    </plugin> -->
    <!-- Groud Truth Position, Pose, and Rates plugin -->
    <plugin filename="libgazebo_ros_p3d.so" name="gazebo_ros_p3d">
      <bodyName>base_link</bodyName>
      <topicName>ground_truth_odom</topicName>
      <alwaysOn>true</alwaysOn>
      <updateRate>100.0</updateRate>
    </plugin>
    <!-- BOXER Platform Plugin -->
    <plugin filename="libboxer_gazebo_plugins.so" name="boxer_platform_plugin">
      <robotNamespace>/</robotNamespace>
    </plugin>
  </gazebo>
  <gazebo reference="front_laser">
    <sensor name="front_laser_link" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>16</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-2.35619</min_angle>
            <max_angle>2.35619</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.001</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_laser">
        <robotNamespace>/</robotNamespace>
        <topicName>front/scan</topicName>
        <frameName>front_laser</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="rear_left_sonar_link">
    <sensor name="rear_left_sonar" type="ray">
      <always_on>true</always_on>
      <update_rate>5</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>5</samples>
            <resolution>1</resolution>
            <min_angle>-0.13083332777</min_angle>
            <max_angle>0.13083332777</max_angle>
          </horizontal>
          <vertical>
            <samples>5</samples>
            <resolution>1</resolution>
            <min_angle>-0.13083332777</min_angle>
            <max_angle>0.13083332777</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.1</min>
          <max>1.2</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libhector_gazebo_ros_sonar.so" name="gazebo_ros_rear_left_sonar_controller">
        <gaussianNoise>0.005</gaussianNoise>
        <topicName>/sonar/left</topicName>
        <frameId>rear_left_sonar_link</frameId>
        <updateRate>5</updateRate>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="rear_right_sonar_link">
    <sensor name="rear_right_sonar" type="ray">
      <always_on>false</always_on>
      <update_rate>5</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>5</samples>
            <resolution>1</resolution>
            <min_angle>-0.13083332777</min_angle>
            <max_angle>0.13083332777</max_angle>
          </horizontal>
          <vertical>
            <samples>5</samples>
            <resolution>1</resolution>
            <min_angle>-0.13083332777</min_angle>
            <max_angle>0.13083332777</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.1</min>
          <max>1.2</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libhector_gazebo_ros_sonar.so" name="gazebo_ros_rear_right_sonar_controller">
        <gaussianNoise>0.005</gaussianNoise>
        <topicName>/sonar/right</topicName>
        <frameId>rear_right_sonar_link</frameId>
        <updateRate>5</updateRate>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="stereo_left">
    <material>Gazebo/Grey</material>
    <sensor name="camera_left" type="camera">
      <update_rate>10</update_rate>
      <camera name="camera_left">
        <pose>0 0 0 0 -1.5707 1.5707</pose>
        <horizontal_fov>1.0471975512</horizontal_fov>
        <image>
          <width>1288</width>
          <height>964</height>
          <format>BAYER_BGGR8</format>
        </image>
        <clip>
          <near>0.5</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>10</updateRate>
        <cameraName>camera_left</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>stereo_left</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Right -->
  <gazebo reference="stereo_right">
    <material>Gazebo/Grey</material>
    <sensor name="camera_right" type="camera">
      <update_rate>10</update_rate>
      <camera name="camera_right">
        <pose>0 0 0 0 -1.5707 1.5707</pose>
        <horizontal_fov>1.0471975512</horizontal_fov>
        <image>
          <width>1288</width>
          <height>964</height>
          <format>BAYER_BGGR8</format>
        </image>
        <clip>
          <near>0.5</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>10</updateRate>
        <cameraName>camera_right</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>stereo_right</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="rotacastor_left_link">
    <!-- For castors, we need high PID values to avoid slippage -->
    <kp>100000000.0</kp>
    <kd>10000.0</kd>
    <!-- Castors will slide freely to allow turning -->
    <mu1>0</mu1>
    <mu2>0</mu2>
    <minDepth>0.0</minDepth>
    <material>Gazebo/DarkGrey</material>
    <selfCollide>false</selfCollide>
  </gazebo>
  <gazebo reference="rotacastor_right_link">
    <!-- For castors, we need high PID values to avoid slippage -->
    <kp>100000000.0</kp>
    <kd>10000.0</kd>
    <!-- Castors will slide freely to allow turning -->
    <mu1>0</mu1>
    <mu2>0</mu2>
    <minDepth>0.0</minDepth>
    <material>Gazebo/DarkGrey</material>
    <selfCollide>false</selfCollide>
  </gazebo>
  <gazebo reference="wheel_left_link">
    <!-- For wheels, we need high PID values to avoid slippage -->
    <kp>100000000.0</kp>
    <kd>10000.0</kd>
    <!-- Wheels have friction to prevent slippage -->
    <mu1>100.0</mu1>
    <mu2>100.0</mu2>
    <minDepth>0.0</minDepth>
    <material>Gazebo/DarkGrey</material>
    <selfCollide>false</selfCollide>
  </gazebo>
  <gazebo reference="wheel_right_link">
    <!-- For wheels, we need high PID values to avoid slippage -->
    <kp>100000000.0</kp>
    <kd>10000.0</kd>
    <!-- Wheels have friction to prevent slippage -->
    <mu1>100.0</mu1>
    <mu2>100.0</mu2>
    <minDepth>0.0</minDepth>
    <material>Gazebo/DarkGrey</material>
    <selfCollide>false</selfCollide>
  </gazebo>
  <!-- Lift surface treatments. -->
  <gazebo reference="lift_link">
    <kp>100</kp>
    <kd>100</kd>
    <mu1>100</mu1>
    <mu2>100</mu2>
    <minDepth>0.0</minDepth>
  </gazebo>
  <material name="Boxer_Black">
    <color rgba="0.1 0.1 0.1 1.0"/>
  </material>
  <material name="Boxer_Blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <material name="Boxer_Purple">
    <color rgba="0.6 0.0 0.6 1.0"/>
  </material>
  <material name="Boxer_Green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>
  <material name="Boxer_LimeGreen">
    <color rgba="0.3 0.8 0.3 1.0"/>
  </material>
  <material name="Boxer_Grey">
    <color rgba="0.5 0.5 0.5 1.0"/>
  </material>
  <material name="Boxer_DarkGrey">
    <color rgba="0.3 0.3 0.3 1.0"/>
  </material>
  <material name="Boxer_Red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="Boxer_Pink">
    <color rgba="0.8 0.4 0.8 1.0"/>
  </material>
  <material name="Boxer_White">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <material name="Boxer_Yellow">
    <color rgba="0.8 0.8 0.0 1.0"/>
  </material>
  <material name="Boxer_GreyTransparent">
    <color rgba="0.5 0.5 0.5 0.5"/>
  </material>
  <link name="chassis_link">
    <inertial>
      <origin rpy="1.5708 0 0" xyz="0 0 0.07"/>
      <mass value="51"/>
      <inertia ixx="2.3" ixy="0" ixz="0" iyy="3.35" iyz="0.00" izz="1.22"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://boxer_description/meshes/chassis_link.dae"/>
      </geometry>
      <material name="">
        <color rgba="0.8 0.8 0.9 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://boxer_description/meshes/chassis_link.STL"/>
      </geometry>
    </collision>
  </link>
  <link name="internal_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0.19 -0.031"/>
      <mass value="31"/>
      <inertia ixx="1.19" ixy="0" ixz="0" iyy="1.82" iyz="0.0" izz="0.68"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://boxer_description/meshes/internal_link.dae"/>
      </geometry>
      <material name="Boxer_DarkGrey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- Mesh is scaled down slightly in length, to mitigate collision with laser rays due to slow physics updates  -->
        <!-- (The z axis is scaled since the whole model is rotated at the joint, and collision model resolution isn't
           very smart.) -->
        <mesh filename="package://boxer_description/meshes/internal_link.STL"/>
      </geometry>
    </collision>
  </link>
  <joint name="internal_joint" type="fixed">
    <origin rpy="1.5708 0 0" xyz="0 0 0"/>
    <parent link="chassis_link"/>
    <child link="internal_link"/>
    <axis xyz="0 0 0"/>
  </joint>
  <link name="lift_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0.076 0"/>
      <mass value="10"/>
      <inertia ixx="0.47" ixy="0" ixz="0" iyy="0.74" iyz="0" izz="0.29"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://boxer_description/meshes/lift_link.dae"/>
      </geometry>
      <material name="">
        <color rgba="0.8 0.8 0.9 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://boxer_description/meshes/lift_link.STL"/>
      </geometry>
    </collision>
  </link>
  <joint name="lift_joint" type="prismatic">
    <origin rpy="1.5708 0 0" xyz="0 0 0.177"/>
    <parent link="chassis_link"/>
    <child link="lift_link"/>
    <axis xyz="0 1 0"/>
    <limit effort="10000.0" lower="0" upper="0.078" velocity="0.02"/>
    <dynamics damping="100.0" friction="100"/>
  </joint>
  <link name="top_mount">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://boxer_description/meshes/top_plate.stl"/>
      </geometry>
      <material name="Boxer_DarkGrey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://boxer_description/meshes/top_plate_collision.stl"/>
      </geometry>
    </collision>
  </link>
  <joint name="top_mount_joint" type="fixed">
    <origin rpy="0 -1.5707 -1.5707" xyz="0 0.1125 0"/>
    <parent link="lift_link"/>
    <child link="top_mount"/>
  </joint>
  <link name="rotacastor_right_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="100"/>
      <inertia ixx="0.2" ixy="0" ixz="0" iyy="0.2" iyz="0" izz="0.2"/>
    </inertial>
    <visual>
      <origin rpy="0 1.5708 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.06" radius="0.0625"/>
      </geometry>
      <material name="Boxer_Red"/>
    </visual>
    <collision>
      <origin rpy="0 1.5708 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.001" radius="0.0625"/>
      </geometry>
    </collision>
  </link>
  <joint name="rotacastor_right_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-0.177 -0.274 0.043"/>
    <parent link="chassis_link"/>
    <child link="rotacastor_right_link"/>
    <axis xyz="1 0 0"/>
    <dynamics damping="1.0"/>
  </joint>
  <link name="rotacastor_left_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="100"/>
      <inertia ixx="0.2" ixy="0" ixz="0" iyy="0.2" iyz="0" izz="0.2"/>
    </inertial>
    <visual>
      <origin rpy="0 1.5708 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.06" radius="0.0625"/>
      </geometry>
      <material name="Boxer_Red"/>
    </visual>
    <collision>
      <origin rpy="0 1.5708 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.001" radius="0.0625"/>
      </geometry>
    </collision>
  </link>
  <joint name="rotacastor_left_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.177 -0.274 0.043"/>
    <parent link="chassis_link"/>
    <child link="rotacastor_left_link"/>
    <axis xyz="1 0 0"/>
    <dynamics damping="1.0"/>
  </joint>
  <link name="wheel_right_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="100"/>
      <inertia ixx="0.2" ixy="0" ixz="0" iyy="0.2" iyz="0" izz="0.2"/>
    </inertial>
    <visual>
      <origin rpy="0 1.5708 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.080"/>
      </geometry>
      <material name="Boxer_Red"/>
    </visual>
    <collision>
      <origin rpy="0 1.5708 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.001" radius="0.080"/>
      </geometry>
    </collision>
  </link>
  <joint name="wheel_right_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.247 0.157 0.058"/>
    <parent link="chassis_link"/>
    <child link="wheel_right_link"/>
    <axis xyz="1 0 0"/>
    <dynamics damping="1.0"/>
  </joint>
  <link name="wheel_left_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="100"/>
      <inertia ixx="0.2" ixy="0" ixz="0" iyy="0.2" iyz="0" izz="0.2"/>
    </inertial>
    <visual>
      <origin rpy="0 1.5708 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.080"/>
      </geometry>
      <material name="Boxer_Red"/>
    </visual>
    <collision>
      <origin rpy="0 1.5708 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.001" radius="0.080"/>
      </geometry>
    </collision>
  </link>
  <joint name="wheel_left_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.247 0.157 0.058"/>
    <parent link="chassis_link"/>
    <child link="wheel_left_link"/>
    <axis xyz="1 0 0"/>
    <dynamics damping="1.0"/>
  </joint>
  <!-- Base link with no geometry or inertia, because KDL needs it
     to be that way. -->
  <link name="base_link"/>
  <joint name="base_chassis_joint" type="fixed">
    <origin rpy="0 0 1.5708" xyz="0.15 0 0"/>
    <parent link="base_link"/>
    <child link="chassis_link"/>
  </joint>
  <!-- Projection of base_link on the ground to get the 3D data
in the right frame w.r.t the ground. -->
  <link name="base_footprint"/>
  <joint name="base_footprint_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 -0.08"/>
    <parent link="base_link"/>
    <child link="base_footprint"/>
  </joint>
  <!-- Link for the position of the laser. -->
  <link name="front_laser"/>
  <joint name="base_laser_joint" type="fixed">
    <!-- LIDAR is moved forward slightly, from 0.407, to mitigate collision with internal_link due to slow physics updates  -->
    <origin rpy="3.14159 0 0" xyz="0.44 0 0.172"/>
    <parent link="base_link"/>
    <child link="front_laser"/>
  </joint>
  <!-- Stereo camera link to base_link. -->
  <link name="stereo"/>
  <joint name="stereo_camera_joint" type="fixed">
    <origin rpy="3.14159 0 0" xyz="0.4884 0 0.05465"/>
    <parent link="base_link"/>
    <child link="stereo"/>
  </joint>
  <link name="stereo_left"/>
  <joint name="stereo_left_joint" type="fixed">
    <origin rpy="-1.570796327 0 -1.570796327" xyz="0 0.060 0"/>
    <parent link="stereo"/>
    <child link="stereo_left"/>
  </joint>
  <link name="stereo_right"/>
  <joint name="stereo_right_joint" type="fixed">
    <origin rpy="-1.570796327 0 -1.570796327" xyz="0 -0.060 0"/>
    <parent link="stereo"/>
    <child link="stereo_right"/>
  </joint>
  <!-- Sonar links to base link joints -->
  <link name="rear_left_sonar_link"/>
  <joint name="rear_left_sonar_joint" type="fixed">
    <origin rpy="0 0 3.14159" xyz="-0.2043 0.150 0.157"/>
    <parent link="base_link"/>
    <child link="rear_left_sonar_link"/>
  </joint>
  <link name="rear_right_sonar_link"/>
  <joint name="rear_right_sonar_joint" type="fixed">
    <origin rpy="0 0 3.141597" xyz="-0.2043 -0.150 0.157"/>
    <parent link="base_link"/>
    <child link="rear_right_sonar_link"/>
  </joint>
  <transmission name="wheel_left_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="wheel_left_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="wheel_left_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="wheel_right_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="wheel_right_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="wheel_right_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="lift_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="lift_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="lift_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="imu_link"/>
  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin rpy="0 0 -0.78539816339744828" xyz="0.191959 -0.086412 0.18455965360"/>
  </joint>
  <!-- This file is a placeholder which is included by default from
       boxer.urdf.xacro. If a robot is being customized and requires
       additional URDF, set the BOXER_URDF_EXTRAS environment variable
       to the full path of the file you would like included. -->
  <!-- the link that is connected to panda_arm -->
  <link name="top_mount_upper">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://boxer_description/meshes/top_plate.stl"/>
      </geometry>
      <material name="Boxer_DarkGrey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://boxer_description/meshes/top_plate_collision.stl"/>
      </geometry>
    </collision>
  </link>
  <link name="extrusion1">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://albert_description/meshes/extrusion.stl"/>
      </geometry>
      <material name="Boxer_DarkGrey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://albert_description/meshes/extrusion.stl"/>
      </geometry>
    </collision>
  </link>
  <joint name="extrusion1_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-0.2785 0.1835 0"/>
    <parent link="top_mount"/>
    <child link="extrusion1"/>
  </joint>
  <link name="extrusion2">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://albert_description/meshes/extrusion.stl"/>
      </geometry>
      <material name="Boxer_DarkGrey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://albert_description/meshes/extrusion.stl"/>
      </geometry>
    </collision>
  </link>
  <joint name="extrusion2_joint" type="fixed">
    <origin rpy="0 0 -1.5707" xyz="0.2785 0.1835 0"/>
    <parent link="top_mount"/>
    <child link="extrusion2"/>
  </joint>
  <link name="extrusion3">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://albert_description/meshes/extrusion.stl"/>
      </geometry>
      <material name="Boxer_DarkGrey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://albert_description/meshes/extrusion.stl"/>
      </geometry>
    </collision>
  </link>
  <joint name="extrusion3_joint" type="fixed">
    <origin rpy="0 0 3.1414" xyz="0.2785 -0.1835 0"/>
    <parent link="top_mount"/>
    <child link="extrusion3"/>
  </joint>
  <link name="extrusion4">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://albert_description/meshes/extrusion.stl"/>
      </geometry>
      <material name="Boxer_DarkGrey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://albert_description/meshes/extrusion.stl"/>
      </geometry>
    </collision>
  </link>
  <joint name="extrusion4_joint" type="fixed">
    <origin rpy="0 0 1.5707" xyz="-0.2785 -0.1835 0"/>
    <parent link="top_mount"/>
    <child link="extrusion4"/>
  </joint>
  <!-- 0.27 in z direction because extrusion is 0.30, and plate is 0.1 -->
  <joint name="top_mount_joint_upper" type="fixed">
    <origin rpy="0 0 0" xyz="0.2785 -0.1835 0.31"/>
    <parent link="extrusion1"/>
    <child link="top_mount_upper"/>
  </joint>
  <!-- =============================================================== -->
  <!-- || This file does not contain official inertial properties   || -->
  <!-- || of panda robot. The values are from the identification    || -->
  <!-- || results published in: Identification of the Franka Emika  || -->
  <!-- || PandaRobot With Retrieval of Feasible Parameters Using    || -->
  <!-- || Penalty-Based Optimization                                || -->
  <!-- || by: Claudio Gaz, Marco Cognetti, Alexander Oliva,         || -->
  <!-- || Paolo Robuffo Giordano, Alessandro de Luca                || -->
  <!-- =============================================================== -->
  <joint name="panda_joint_top_mount_upper" type="fixed">
    <parent link="top_mount_upper"/>
    <child link="panda_link0"/>
    <origin rpy="0 0 0" xyz="0.237 0 0"/>
  </joint>
  <link name="panda_link0">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://franka_description/meshes/visual/link0.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://franka_description/meshes/collision/link0.stl"/>
      </geometry>
    </collision>
    <inertial>
      <!-- Estimated guesses from CAD -->
      <origin rpy="0 0 0" xyz="-0.041018 -0.00014 0.049974"/>
      <mass value="0.629769"/>
      <inertia ixx="0.00315" ixy="8.2904E-07" ixz="0.00015" iyy="0.00388" iyz="8.2299E-06" izz="0.004285"/>
    </inertial>
  </link>
  <link name="panda_link1">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://franka_description/meshes/visual/link1.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://franka_description/meshes/collision/link1.stl"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0.003875 0.002081 -0.04762"/>
      <mass value="4.970684"/>
      <inertia ixx="0.70337" ixy="-0.00013900" ixz="0.0067720" iyy="0.70661" iyz="0.019169" izz="0.0091170"/>
    </inertial>
  </link>
  <joint name="panda_joint1" type="revolute">
    <safety_controller k_position="100.0" k_velocity="40.0" soft_lower_limit="-2.8973" soft_upper_limit="2.8973"/>
    <origin rpy="0 0 0" xyz="0 0 0.333"/>
    <parent link="panda_link0"/>
    <child link="panda_link1"/>
    <axis xyz="0 0 1"/>
    <limit acceleration="15" effort="87" lower="-2.9671" upper="2.9671" velocity="2.5"/>
    <dynamics D="1" K="7000" damping="0.003" friction="0.0" mu_coulomb="0" mu_viscous="16"/>
  </joint>
  <link name="panda_link2">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://franka_description/meshes/visual/link2.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://franka_description/meshes/collision/link2.stl"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz=" -0.003141 -0.02872  0.003495"/>
      <mass value="0.646926"/>
      <inertia ixx="0.0079620" ixy="-3.9250e-3" ixz="1.0254e-02" iyy="2.8110e-02" iyz="7.0400e-04" izz="2.5995e-02"/>
    </inertial>
  </link>
  <joint name="panda_joint2" type="revolute">
    <safety_controller k_position="100.0" k_velocity="40.0" soft_lower_limit="-1.7628" soft_upper_limit="1.7628"/>
    <origin rpy="-1.57079632679 0 0" xyz="0 0 0"/>
    <parent link="panda_link1"/>
    <child link="panda_link2"/>
    <axis xyz="0 0 1"/>
    <limit acceleration="7.5" effort="87" lower="-1.8326" upper="1.8326" velocity="2.5"/>
    <dynamics D="1" K="7000" damping="0.003" friction="0.0" mu_coulomb="0" mu_viscous="16"/>
  </joint>
  <link name="panda_link3">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://franka_description/meshes/visual/link3.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://franka_description/meshes/collision/link3.stl"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="2.7518e-02 3.9252e-02 -6.6502e-02"/>
      <mass value="3.228604"/>
      <inertia ixx="3.7242e-02" ixy="-4.7610e-03" ixz="-1.1396e-02" iyy="3.6155e-02" iyz="-1.2805e-02" izz="1.0830e-02"/>
    </inertial>
  </link>
  <joint name="panda_joint3" type="revolute">
    <safety_controller k_position="100.0" k_velocity="40.0" soft_lower_limit="-2.8973" soft_upper_limit="2.8973"/>
    <origin rpy="1.57079632679 0 0" xyz="0 -0.316 0"/>
    <parent link="panda_link2"/>
    <child link="panda_link3"/>
    <axis xyz="0 0 1"/>
    <limit acceleration="12.5" effort="87" lower="-2.9671" upper="2.9671" velocity="2.5"/>
    <dynamics D="1" K="7000" damping="0.003" friction="0.0" mu_coulomb="0" mu_viscous="16"/>
  </joint>
  <link name="panda_link4">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://franka_description/meshes/visual/link4.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://franka_description/meshes/collision/link4.stl"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="-5.317e-02 1.04419e-01 2.7454e-02"/>
      <mass value="3.587895"/>
      <inertia ixx="2.5853e-02" ixy="7.7960e-03" ixz="-1.3320e-03" iyy="1.9552e-02" iyz="8.6410e-03" izz="2.8323e-02"/>
    </inertial>
  </link>
  <joint name="panda_joint4" type="revolute">
    <safety_controller k_position="100.0" k_velocity="40.0" soft_lower_limit="-3.0718" soft_upper_limit="-0.0698"/>
    <origin rpy="1.57079632679 0 0" xyz="0.0825 0 0"/>
    <parent link="panda_link3"/>
    <child link="panda_link4"/>
    <axis xyz="0 0 1"/>
    <limit acceleration="12.5" effort="87" lower="-3.1416" upper="-0.4" velocity="2.5"/>
    <dynamics D="1" K="7000" damping="0.003" friction="0.0" mu_coulomb="0" mu_viscous="16"/>
  </joint>
  <link name="panda_link5">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://franka_description/meshes/visual/link5.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://franka_description/meshes/collision/link5.stl"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="-1.1953e-02 4.1065e-02 -3.8437e-02"/>
      <mass value="1.225946"/>
      <inertia ixx="3.5549e-02" ixy="-2.1170e-03" ixz="-4.0370e-03" iyy="2.9474e-02" iyz="2.2900e-04" izz="8.6270e-03"/>
    </inertial>
  </link>
  <joint name="panda_joint5" type="revolute">
    <safety_controller k_position="100.0" k_velocity="40.0" soft_lower_limit="-2.8973" soft_upper_limit="2.8973"/>
    <origin rpy="-1.57079632679 0 0" xyz="-0.0825 0.384 0"/>
    <parent link="panda_link4"/>
    <child link="panda_link5"/>
    <axis xyz="0 0 1"/>
    <limit acceleration="15" effort="12" lower="-2.9671" upper="2.9671" velocity="3"/>
    <dynamics D="1" K="7000" damping="0.003" friction="0.0" mu_coulomb="0" mu_viscous="16"/>
  </joint>
  <link name="panda_link6">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://franka_description/meshes/visual/link6.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://franka_description/meshes/collision/link6.stl"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="6.0149e-02 -1.4117e-02 -1.0517e-02"/>
      <mass value="1.666555"/>
      <inertia ixx="1.9640e-03" ixy="1.0900e-04" ixz="-1.1580e-03" iyy="4.3540e-03" iyz="3.4100e-04" izz="5.4330e-03"/>
    </inertial>
  </link>
  <joint name="panda_joint6" type="revolute">
    <safety_controller k_position="100.0" k_velocity="40.0" soft_lower_limit="-0.0175" soft_upper_limit="3.7525"/>
    <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
    <parent link="panda_link5"/>
    <child link="panda_link6"/>
    <axis xyz="0 0 1"/>
    <limit acceleration="20" effort="12" lower="-0.0873" upper="3.8223" velocity="3"/>
    <dynamics D="1" K="7000" damping="0.003" friction="0.0" mu_coulomb="0" mu_viscous="16"/>
  </joint>
  <link name="panda_link7">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://franka_description/meshes/visual/link7.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://franka_description/meshes/collision/link7.stl"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="1.0517e-02 -4.252e-03 6.1597e-02"/>
      <mass value="7.35522e-01"/>
      <inertia ixx="1.2516e-02" ixy="-4.2800e-04" ixz="-1.1960e-03" iyy="1.0027e-02" iyz="-7.4100e-04" izz="4.8150e-03"/>
    </inertial>
  </link>
  <joint name="panda_joint7" type="revolute">
    <safety_controller k_position="100.0" k_velocity="40.0" soft_lower_limit="-2.8973" soft_upper_limit="2.8973"/>
    <origin rpy="1.57079632679 0 0" xyz="0.088 0 0"/>
    <parent link="panda_link6"/>
    <child link="panda_link7"/>
    <axis xyz="0 0 1"/>
    <limit acceleration="20" effort="12" lower="-2.9671" upper="2.9671" velocity="3"/>
    <dynamics D="1" K="7000" damping="0.003" friction="0.0" mu_coulomb="0" mu_viscous="16"/>
  </joint>
  <link name="panda_link8"/>
  <joint name="panda_joint8" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.107"/>
    <parent link="panda_link7"/>
    <child link="panda_link8"/>
    <axis xyz="0 0 0"/>
  </joint>
  <joint name="panda_hand_joint" type="fixed">
    <parent link="panda_link8"/>
    <child link="panda_hand"/>
    <origin rpy="0 0 -0.785398163397" xyz="0 0 0"/>
  </joint>
  <material name="white">
    <color rgba="0.8 0.8 0.8 1.0"/>
  </material>
  <!-- ee link -->
  <link name="panda_hand">
    <visual>
      <origin rpy="0 0 3.14159265359" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://albert_description/meshes/vacuum_plus_bracket.dae" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="white"/>
    </visual>
    <collision>
      <origin rpy="0 0 3.14159265359" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://albert_description/meshes/vacuum_plus_bracket.dae" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.73"/>
      <origin xyz="-0.01 0 0.03"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.0025" iyz="0" izz="0.0017"/>
    </inertial>
  </link>
  <joint name="panda_vacuum_joint" type="fixed">
    <parent link="panda_hand"/>
    <child link="panda_vacuum"/>
    <origin rpy="0 0 0" xyz="0 0 0.33"/>
  </joint>
  <link name="panda_vacuum">
    </link>
  <link name="panda_rightfinger">
    <inertial>
      <mass value="0.015"/>
      <inertia ixx="2.375e-06" ixy="0" ixz="0" iyy="2.375e-06" iyz="0" izz="7.5e-07"/>
    </inertial>
  </link>
  <link name="panda_leftfinger">
    <inertial>
      <mass value="0.015"/>
      <inertia ixx="2.375e-06" ixy="0" ixz="0" iyy="2.375e-06" iyz="0" izz="7.5e-07"/>
    </inertial>
  </link>
  <gazebo reference="panda_leftfinger">
    <collision>
      <max_contacts>10</max_contacts>
      <surface>
        <contact>
          <ode>
            <!-- These two parameter need application specific tuning. -->
            <!-- Usually you want no "snap out" velocity and a generous -->
            <!-- penetration depth to keep the grasping stable -->
            <max_vel>0</max_vel>
            <min_depth>0.001</min_depth>
          </ode>
        </contact>
        <friction>
          <ode>
            <mu>1.13</mu>
            <mu2>1.13</mu2>
          </ode>
        </friction>
        <bounce/>
      </surface>
    </collision>
  </gazebo>
  <gazebo reference="panda_rightfinger">
    <collision>
      <max_contacts>10</max_contacts>
      <surface>
        <contact>
          <ode>
            <!-- These two parameter need application specific tuning. -->
            <!-- Usually you want no "snap out" velocity and a generous -->
            <!-- penetration depth to keep the grasping stable -->
            <max_vel>0</max_vel>
            <min_depth>0.001</min_depth>
          </ode>
        </contact>
        <friction>
          <ode>
            <mu>1.13</mu>
            <mu2>1.13</mu2>
          </ode>
        </friction>
        <bounce/>
      </surface>
    </collision>
  </gazebo>
  <joint name="panda_finger_joint1" type="prismatic">
    <parent link="panda_hand"/>
    <child link="panda_leftfinger"/>
    <origin rpy="0 0 0" xyz="0 0 0.0584"/>
    <axis xyz="0 1 0"/>
    <limit effort="100" lower="0.0" upper="0.04" velocity="0.2"/>
    <dynamics damping="0.03" friction="0.0"/>
  </joint>
  <joint name="panda_finger_joint2" type="prismatic">
    <parent link="panda_hand"/>
    <child link="panda_rightfinger"/>
    <origin rpy="0 0 0" xyz="0 0 0.0584"/>
    <axis xyz="0 -1 0"/>
    <limit effort="100" lower="0.0" upper="0.04" velocity="0.2"/>
    <dynamics damping="0.03" friction="0.0"/>
    <mimic joint="panda_finger_joint1"/>
  </joint>
  <material name="aluminum">
    <color rgba="0.5 0.5 0.5 1"/>
  </material>
  <material name="plastic">
    <color rgba="0.1 0.1 0.1 1"/>
  </material>
  <!-- <xacro:include filename="$(find realsense2_description)/urdf/_usb_plug.urdf.xacro" /> -->
  <!-- camera body, with origin at bottom screw mount -->
  <joint name="camera_joint" type="fixed">
    <origin rpy="0 -1.48 1.57079632679" xyz="0 -0.10 0.0210"/>
    <parent link="panda_hand"/>
    <child link="camera_bottom_screw_frame"/>
  </joint>
  <link name="camera_bottom_screw_frame"/>
  <joint name="camera_link_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0106 0.0175 0.0125"/>
    <parent link="camera_bottom_screw_frame"/>
    <child link="camera_link"/>
  </joint>
  <link name="camera_link">
    <visual>
      <!-- the mesh origin is at front plate in between the two infrared camera axes -->
      <origin rpy="1.57079632679 0 1.57079632679" xyz="0.0043 -0.0175 0"/>
      <geometry>
        <mesh filename="package://realsense2_description/meshes/d435.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 -0.0175 0"/>
      <geometry>
        <box size="0.02505 0.09 0.025"/>
      </geometry>
    </collision>
    <!-- <inertial> -->
    <!-- The following are not reliable values, and should not be used for modeling -->
    <!-- <mass value="0.076" /> -->
    <!-- <origin xyz="0 0 0" /> -->
    <!-- <inertia ixx="0.003881243" ixy="0.0" ixz="0.0" iyy="0.000498940" iyz="0.0" izz="0.003879257" /> -->
    <!-- </inertial> -->
  </link>
  <!-- camera depth joints and links -->
  <joint name="camera_depth_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="camera_link"/>
    <child link="camera_depth_frame"/>
  </joint>
  <link name="camera_depth_frame"/>
  <joint name="camera_depth_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="camera_depth_frame"/>
    <child link="camera_depth_optical_frame"/>
  </joint>
  <link name="camera_depth_optical_frame"/>
  <!-- camera left IR joints and links -->
  <joint name="camera_infra1_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.0 0"/>
    <parent link="camera_link"/>
    <child link="camera_infra1_frame"/>
  </joint>
  <link name="camera_infra1_frame"/>
  <joint name="camera_infra1_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="camera_infra1_frame"/>
    <child link="camera_infra1_optical_frame"/>
  </joint>
  <link name="camera_infra1_optical_frame"/>
  <!-- camera right IR joints and links -->
  <joint name="camera_infra2_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 -0.05 0"/>
    <parent link="camera_link"/>
    <child link="camera_infra2_frame"/>
  </joint>
  <link name="camera_infra2_frame"/>
  <joint name="camera_infra2_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="camera_infra2_frame"/>
    <child link="camera_infra2_optical_frame"/>
  </joint>
  <link name="camera_infra2_optical_frame"/>
  <!-- camera color joints and links -->
  <joint name="camera_color_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.015 0"/>
    <parent link="camera_link"/>
    <child link="camera_color_frame"/>
  </joint>
  <link name="camera_color_frame"/>
  <joint name="camera_color_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="camera_color_frame"/>
    <child link="camera_color_optical_frame"/>
  </joint>
  <link name="camera_color_optical_frame"/>
  <!-- <xacro:if value="${add_plug}"> -->
  <!--   <xacro:usb_plug parent="${name}_link" name="${name}_usb_plug"> -->
  <!--     <origin xyz="${d435_cam_mount_from_center_offset - 0.02095} ${-d435_cam_depth_py - 0.0353} 0" rpy="0 0 0"/> -->
  <!--   </xacro:usb_plug> -->
  <!-- </xacro:if> -->
  <gazebo reference="camera_link">
    <self_collide>0</self_collide>
    <enable_wind>0</enable_wind>
    <kinematic>0</kinematic>
    <gravity>1</gravity>
    <!--<mu>1</mu>-->
    <mu2>1</mu2>
    <fdir1>0 0 0</fdir1>
    <!--<slip1>0</slip1>
      <slip2>0</slip2>-->
    <kp>1e+13</kp>
    <kd>1</kd>
    <!--<max_vel>0.01</max_vel>
      <min_depth>0</min_depth>-->
    <sensor name="cameracolor" type="camera">
      <camera name="camera">
        <horizontal_fov>1.21125850088</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>RGB_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>30</update_rate>
      <visualize>1</visualize>
    </sensor>
    <sensor name="cameraired1" type="camera">
      <camera name="camera">
        <horizontal_fov>1.4870205227</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>L_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.05</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>90</update_rate>
      <visualize>0</visualize>
    </sensor>
    <sensor name="cameraired2" type="camera">
      <camera name="camera">
        <horizontal_fov>1.4870205227</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>L_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.05</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>90</update_rate>
      <visualize>0</visualize>
    </sensor>
    <sensor name="cameradepth" type="depth">
      <camera name="camera">
        <horizontal_fov>1.4870205227</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.100</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>90</update_rate>
      <visualize>0</visualize>
    </sensor>
  </gazebo>
  <gazebo>
    <plugin filename="librealsense_gazebo_plugin.so" name="realsense_435">
      <prefix>camera</prefix>
      <depthUpdateRate>30.0</depthUpdateRate>
      <colorUpdateRate>30.0</colorUpdateRate>
      <infraredUpdateRate>30.0</infraredUpdateRate>
      <depthTopicName>depth/image_raw</depthTopicName>
      <depthCameraInfoTopicName>depth/camera_info</depthCameraInfoTopicName>
      <colorTopicName>color/image_raw</colorTopicName>
      <colorCameraInfoTopicName>color/camera_info</colorCameraInfoTopicName>
      <infrared1TopicName>infra1/image_raw</infrared1TopicName>
      <infrared1CameraInfoTopicName>infra1/camera_info</infrared1CameraInfoTopicName>
      <infrared2TopicName>infra2/image_raw</infrared2TopicName>
      <infrared2CameraInfoTopicName>infra2/camera_info</infrared2CameraInfoTopicName>
      <colorOpticalframeName>camera_color_optical_frame</colorOpticalframeName>
      <depthOpticalframeName>camera_depth_optical_frame</depthOpticalframeName>
      <infrared1OpticalframeName>camera_left_ir_optical_frame</infrared1OpticalframeName>
      <infrared2OpticalframeName>camera_right_ir_optical_frame</infrared2OpticalframeName>
      <rangeMinDepth>0.2</rangeMinDepth>
      <rangeMaxDepth>10.0</rangeMaxDepth>
      <pointCloud>True</pointCloud>
      <pointCloudTopicName>depth/color/points</pointCloudTopicName>
      <pointCloudCutoff>0.25</pointCloudCutoff>
      <pointCloudCutoffMax>9.0</pointCloudCutoffMax>
    </plugin>
  </gazebo>
  <gazebo reference="panda_finger_joint1">
    <!-- Needed for ODE to output external wrenches on joints -->
    <provideFeedback>true</provideFeedback>
  </gazebo>
  <transmission name="panda_finger_joint1_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="panda_finger_joint1">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="panda_finger_joint1_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </actuator>
  </transmission>
  <gazebo reference="panda_finger_joint2">
    <!-- Needed for ODE to output external wrenches on joints -->
    <provideFeedback>true</provideFeedback>
  </gazebo>
  <transmission name="panda_finger_joint2_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="panda_finger_joint2">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="panda_finger_joint2_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </actuator>
  </transmission>
  <!-- Gazebo requires a joint to a link called "world" for statically mounted robots -->
  <!--<link name="world" />
    <joint name="world_joint" type="fixed">
      <origin xyz="$(arg xyz)" rpy="$(arg rpy)" />
      <parent link="world" />
      <child  link="$(arg arm_id)_link0" />
    </joint>-->
  <gazebo reference="panda_joint1">
    <!-- Needed for ODE to output external wrenches on joints -->
    <provideFeedback>true</provideFeedback>
  </gazebo>
  <transmission name="panda_joint1_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="panda_joint1">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="panda_joint1_motor">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </actuator>
  </transmission>
  <gazebo reference="panda_joint2">
    <!-- Needed for ODE to output external wrenches on joints -->
    <provideFeedback>true</provideFeedback>
  </gazebo>
  <transmission name="panda_joint2_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="panda_joint2">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="panda_joint2_motor">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </actuator>
  </transmission>
  <gazebo reference="panda_joint3">
    <!-- Needed for ODE to output external wrenches on joints -->
    <provideFeedback>true</provideFeedback>
  </gazebo>
  <transmission name="panda_joint3_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="panda_joint3">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="panda_joint3_motor">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </actuator>
  </transmission>
  <gazebo reference="panda_joint4">
    <!-- Needed for ODE to output external wrenches on joints -->
    <provideFeedback>true</provideFeedback>
  </gazebo>
  <transmission name="panda_joint4_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="panda_joint4">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="panda_joint4_motor">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </actuator>
  </transmission>
  <gazebo reference="panda_joint5">
    <!-- Needed for ODE to output external wrenches on joints -->
    <provideFeedback>true</provideFeedback>
  </gazebo>
  <transmission name="panda_joint5_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="panda_joint5">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="panda_joint5_motor">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </actuator>
  </transmission>
  <gazebo reference="panda_joint6">
    <!-- Needed for ODE to output external wrenches on joints -->
    <provideFeedback>true</provideFeedback>
  </gazebo>
  <transmission name="panda_joint6_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="panda_joint6">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="panda_joint6_motor">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </actuator>
  </transmission>
  <gazebo reference="panda_joint7">
    <!-- Needed for ODE to output external wrenches on joints -->
    <provideFeedback>true</provideFeedback>
  </gazebo>
  <transmission name="panda_joint7_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="panda_joint7">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="panda_joint7_motor">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </actuator>
  </transmission>
  <gazebo reference="panda_joint1">
    <!-- Needed for ODE to output external wrenches on joints -->
    <provideFeedback>true</provideFeedback>
  </gazebo>
  <transmission name="panda_joint1_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="panda_joint1">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="panda_joint1_motor">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </actuator>
  </transmission>
  <gazebo reference="panda_joint2">
    <!-- Needed for ODE to output external wrenches on joints -->
    <provideFeedback>true</provideFeedback>
  </gazebo>
  <transmission name="panda_joint2_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="panda_joint2">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="panda_joint2_motor">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </actuator>
  </transmission>
  <gazebo reference="panda_joint3">
    <!-- Needed for ODE to output external wrenches on joints -->
    <provideFeedback>true</provideFeedback>
  </gazebo>
  <transmission name="panda_joint3_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="panda_joint3">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="panda_joint3_motor">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </actuator>
  </transmission>
  <gazebo reference="panda_joint4">
    <!-- Needed for ODE to output external wrenches on joints -->
    <provideFeedback>true</provideFeedback>
  </gazebo>
  <transmission name="panda_joint4_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="panda_joint4">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="panda_joint4_motor">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </actuator>
  </transmission>
  <gazebo reference="panda_joint5">
    <!-- Needed for ODE to output external wrenches on joints -->
    <provideFeedback>true</provideFeedback>
  </gazebo>
  <transmission name="panda_joint5_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="panda_joint5">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="panda_joint5_motor">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </actuator>
  </transmission>
  <gazebo reference="panda_joint6">
    <!-- Needed for ODE to output external wrenches on joints -->
    <provideFeedback>true</provideFeedback>
  </gazebo>
  <transmission name="panda_joint6_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="panda_joint6">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="panda_joint6_motor">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </actuator>
  </transmission>
  <gazebo reference="panda_joint7">
    <!-- Needed for ODE to output external wrenches on joints -->
    <provideFeedback>true</provideFeedback>
  </gazebo>
  <transmission name="panda_joint7_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="panda_joint7">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="panda_joint7_motor">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </actuator>
  </transmission>
  <gazebo reference="panda_joint1">
    <!-- Needed for ODE to output external wrenches on joints -->
    <provideFeedback>true</provideFeedback>
  </gazebo>
  <transmission name="panda_joint1_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="panda_joint1">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="panda_joint1_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </actuator>
  </transmission>
  <gazebo reference="panda_joint2">
    <!-- Needed for ODE to output external wrenches on joints -->
    <provideFeedback>true</provideFeedback>
  </gazebo>
  <transmission name="panda_joint2_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="panda_joint2">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="panda_joint2_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </actuator>
  </transmission>
  <gazebo reference="panda_joint3">
    <!-- Needed for ODE to output external wrenches on joints -->
    <provideFeedback>true</provideFeedback>
  </gazebo>
  <transmission name="panda_joint3_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="panda_joint3">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="panda_joint3_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </actuator>
  </transmission>
  <gazebo reference="panda_joint4">
    <!-- Needed for ODE to output external wrenches on joints -->
    <provideFeedback>true</provideFeedback>
  </gazebo>
  <transmission name="panda_joint4_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="panda_joint4">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="panda_joint4_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </actuator>
  </transmission>
  <gazebo reference="panda_joint5">
    <!-- Needed for ODE to output external wrenches on joints -->
    <provideFeedback>true</provideFeedback>
  </gazebo>
  <transmission name="panda_joint5_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="panda_joint5">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="panda_joint5_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </actuator>
  </transmission>
  <gazebo reference="panda_joint6">
    <!-- Needed for ODE to output external wrenches on joints -->
    <provideFeedback>true</provideFeedback>
  </gazebo>
  <transmission name="panda_joint6_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="panda_joint6">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="panda_joint6_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </actuator>
  </transmission>
  <gazebo reference="panda_joint7">
    <!-- Needed for ODE to output external wrenches on joints -->
    <provideFeedback>true</provideFeedback>
  </gazebo>
  <transmission name="panda_joint7_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="panda_joint7">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="panda_joint7_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </actuator>
  </transmission>
  <transmission name="panda_franka_state">
    <type>franka_hw/FrankaStateInterface</type>
    <joint name="panda_joint1">
      <hardwareInterface>franka_hw/FrankaStateInterface</hardwareInterface>
    </joint>
    <joint name="panda_joint2">
      <hardwareInterface>franka_hw/FrankaStateInterface</hardwareInterface>
    </joint>
    <joint name="panda_joint3">
      <hardwareInterface>franka_hw/FrankaStateInterface</hardwareInterface>
    </joint>
    <joint name="panda_joint4">
      <hardwareInterface>franka_hw/FrankaStateInterface</hardwareInterface>
    </joint>
    <joint name="panda_joint5">
      <hardwareInterface>franka_hw/FrankaStateInterface</hardwareInterface>
    </joint>
    <joint name="panda_joint6">
      <hardwareInterface>franka_hw/FrankaStateInterface</hardwareInterface>
    </joint>
    <joint name="panda_joint7">
      <hardwareInterface>franka_hw/FrankaStateInterface</hardwareInterface>
    </joint>
    <actuator name="panda_motor1">
      <hardwareInterface>franka_hw/FrankaStateInterface</hardwareInterface>
    </actuator>
    <actuator name="panda_motor2">
      <hardwareInterface>franka_hw/FrankaStateInterface</hardwareInterface>
    </actuator>
    <actuator name="panda_motor3">
      <hardwareInterface>franka_hw/FrankaStateInterface</hardwareInterface>
    </actuator>
    <actuator name="panda_motor4">
      <hardwareInterface>franka_hw/FrankaStateInterface</hardwareInterface>
    </actuator>
    <actuator name="panda_motor5">
      <hardwareInterface>franka_hw/FrankaStateInterface</hardwareInterface>
    </actuator>
    <actuator name="panda_motor6">
      <hardwareInterface>franka_hw/FrankaStateInterface</hardwareInterface>
    </actuator>
    <actuator name="panda_motor7">
      <hardwareInterface>franka_hw/FrankaStateInterface</hardwareInterface>
    </actuator>
  </transmission>
  <transmission name="panda_franka_model">
    <type>franka_hw/FrankaModelInterface</type>
    <joint name="panda_joint1">
      <role>root</role>
      <hardwareInterface>franka_hw/FrankaModelInterface</hardwareInterface>
    </joint>
    <joint name="panda_joint8">
      <role>tip</role>
      <hardwareInterface>franka_hw/FrankaModelInterface</hardwareInterface>
    </joint>
    <actuator name="panda_joint1_motor_root">
      <hardwareInterface>franka_hw/FrankaModelInterface</hardwareInterface>
    </actuator>
    <actuator name="panda_joint8_motor_tip">
      <hardwareInterface>franka_hw/FrankaModelInterface</hardwareInterface>
    </actuator>
  </transmission>
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <controlPeriod>0.001</controlPeriod>
      <robotSimType>franka_gazebo/FrankaHWSim</robotSimType>
    </plugin>
    <self_collide>true</self_collide>
  </gazebo>
</robot>


